version: "3.8"

services:
  app:
    build:
      context: .
    container_name: backend-app
    depends_on:
      - postgresql
    ports:
      - "8000:8000"
    networks:
      - backend

  postgresql:
    container_name: backend-psql
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB_NAME:-postgres}
      PGDATA: /data/postgres
    volumes:
      - ./data/postgres:/data/postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate:v4.16.2
    profiles: ["tools"]
    networks:
      - backend
    volumes:
      - ./api/platform/migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:cool-app@postgresql:5432/postgres?sslmode=disable",
      ]
    command: ["up"]
    depends_on:
      postgresql:
        condition: service_healthy
    restart: on-failure

networks:
  backend:

volumes:
  postgres:
